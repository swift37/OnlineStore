@model OnlineStore.MVC.Models.Product.ProductViewModel

<div class="product-card">
    <div class="card-content">
        <div class="special-status">
            <div class="flags">
                @if (Model.IsNewProduct)
                {
                    <div class="new-flag">NEW</div>
                }
                @if (Model.IsSale)
                {
                    <div class="sale-flag">SALE</div>
                }
            </div>
        </div>
        <div class="product-image">
            <a class="image-link" asp-controller="Catalog" asp-action="Product" asp-route-id="@Model.Id">
                <img src="@Model.Image" loading="lazy" alt="Image">
            </a>
        </div>
        <div class="product-name">
            <a class="product-link" asp-controller="Catalog" asp-action="Product" asp-route-id="@Model.Id">
                @Model.Name
            </a>
        </div>
        <div class="product-rating">
            <a class="rating-link" asp-controller="Catalog" asp-action="Product" asp-route-id="@Model.Id" asp-fragment="reviews">
                @for (int i = 0; i < Math.Floor(Model.Rating); i++)
                {
                    <span class="rating-star">
                        <img src="~/resources/icons/star.png" loading="lazy" alt="★">
                    </span>
                }
                @if (Model.Rating % 1.0 > 0.3)
                {
                    <span class="rating-star">
                        <img src="~/resources/icons/half-star.png" loading="lazy" alt="★">
                    </span>
                }
                @for (int i = (int)Math.Ceiling(Model.Rating); i < 5; i++)
                {
                    <span class="rating-star">
                        <img src="~/resources/icons/empty-star.png" loading="lazy" alt="★">
                    </span>
                }
                <span class="reviews-quantity">
                    (@Model.ReviewsCount)
                </span>
            </a>
        </div>
        <ul class="product-main-specs">
            @if (Model.Specifications != null)
                foreach (var spec in Model.Specifications)
                    if (spec.SpecificationType?.IsMain ?? false)
                    {
                        <li class="product-spec">
                            @spec.SpecificationType.DisplayName: @spec.Value
                        </li>
                    }
        </ul>
        <div class="product-info">
            <div class="info-container">
                <div class="product-price">
                    @if (Model.Discount > 0)
                    {
                        <span class="discount">$@Model.UnitPrice</span>
                    }
                    <span class="price">$@(Model.UnitPrice - Model.Discount)</span>
                </div>
                <div class="product-status">
                    @if (Model.IsAvailable)
                    {
                        <span>Available</span>
                    } else
                    {
                        <span>Not Available</span>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="add-to-wishlist">
        <button class="add-to-wishlist-btn" data-itemid="@Model.Id">
            <img src="~/resources/icons/like.png" alt="" />
        </button>
    </div>
    @if (Model.IsAvailable)
    {
        <div class="add-to-cart">
            <div class="add-to-cart-btn" data-itemid="@Model.Id">
                <img src="~/resources/icons/shopping-cart.png" />
            </div>
        </div>
    }
</div>